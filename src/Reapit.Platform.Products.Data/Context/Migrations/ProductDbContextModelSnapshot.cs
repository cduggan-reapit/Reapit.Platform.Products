// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reapit.Platform.Products.Data.Context;

#nullable disable

namespace Reapit.Platform.Products.Data.Context.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<long>("Cursor")
                        .HasColumnType("bigint")
                        .HasColumnName("cursor");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_modified");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Cursor")
                        .IsUnique();

                    b.HasIndex("DateCreated");

                    b.HasIndex("DateDeleted");

                    b.HasIndex("DateModified");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.ProductClient", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("CallbackUrls")
                        .HasColumnType("longtext")
                        .HasColumnName("callbackUrls");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clientId");

                    b.Property<long>("Cursor")
                        .HasColumnType("bigint")
                        .HasColumnName("cursor");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_modified");

                    b.Property<string>("Description")
                        .HasMaxLength(140)
                        .HasColumnType("varchar(140)")
                        .HasColumnName("description");

                    b.Property<string>("GrantId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("grantId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("productId");

                    b.Property<string>("SignOutUrls")
                        .HasColumnType("longtext")
                        .HasColumnName("signOutUrls");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Cursor")
                        .IsUnique();

                    b.HasIndex("DateCreated");

                    b.HasIndex("DateDeleted");

                    b.HasIndex("DateModified");

                    b.HasIndex("ProductId");

                    b.HasIndex("Name", "DateDeleted")
                        .IsUnique();

                    b.ToTable("product_clients", (string)null);
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.ProductClient", b =>
                {
                    b.HasOne("Reapit.Platform.Products.Domain.Entities.Product", "Product")
                        .WithMany("Clients")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.Product", b =>
                {
                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
