// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reapit.Platform.Products.Data.Context;

#nullable disable

namespace Reapit.Platform.Products.Data.Context.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20241129130233_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.App", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<long>("Cursor")
                        .HasColumnType("bigint")
                        .HasColumnName("cursor");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_modified");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<bool>("SkipConsent")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_first_party");

                    b.HasKey("Id");

                    b.HasIndex("Cursor")
                        .IsUnique();

                    b.HasIndex("DateCreated");

                    b.HasIndex("DateDeleted");

                    b.HasIndex("DateModified");

                    b.HasIndex("Name", "DateDeleted")
                        .IsUnique();

                    b.ToTable("applications", (string)null);
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("AppId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("appId");

                    b.Property<string>("CallbackUrls")
                        .HasColumnType("longtext")
                        .HasColumnName("callbackUrls");

                    b.Property<long>("Cursor")
                        .HasColumnType("bigint")
                        .HasColumnName("cursor");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_modified");

                    b.Property<string>("Description")
                        .HasMaxLength(140)
                        .HasColumnType("varchar(140)")
                        .HasColumnName("description");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clientId");

                    b.Property<string>("LoginUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("loginUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("SignOutUrls")
                        .HasColumnType("longtext")
                        .HasColumnName("signOutUrls");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.HasIndex("Cursor")
                        .IsUnique();

                    b.HasIndex("DateCreated");

                    b.HasIndex("DateDeleted");

                    b.HasIndex("DateModified");

                    b.HasIndex("Name", "DateDeleted")
                        .IsUnique();

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.Grant", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("clientId");

                    b.Property<long>("Cursor")
                        .HasColumnType("bigint")
                        .HasColumnName("cursor");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_modified");

                    b.Property<string>("ResourceServerId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("resourceServerId");

                    b.HasKey("Id");

                    b.HasIndex("Cursor")
                        .IsUnique();

                    b.HasIndex("DateCreated");

                    b.HasIndex("DateDeleted");

                    b.HasIndex("DateModified");

                    b.HasIndex("ResourceServerId");

                    b.HasIndex("ClientId", "ResourceServerId", "DateDeleted")
                        .IsUnique();

                    b.ToTable("grants", (string)null);
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.ResourceServer", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Audience")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)")
                        .HasColumnName("audience");

                    b.Property<long>("Cursor")
                        .HasColumnType("bigint")
                        .HasColumnName("cursor");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_modified");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("externalId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<int>("TokenLifetime")
                        .HasColumnType("int")
                        .HasColumnName("tokenLifetime");

                    b.HasKey("Id");

                    b.HasIndex("Cursor")
                        .IsUnique();

                    b.HasIndex("DateCreated");

                    b.HasIndex("DateDeleted");

                    b.HasIndex("DateModified");

                    b.HasIndex("Name", "DateDeleted")
                        .IsUnique();

                    b.ToTable("resource_servers", (string)null);
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.Scope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("ResourceServerId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("resourceServerId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("ResourceServerId");

                    b.HasIndex("Value", "ResourceServerId")
                        .IsUnique();

                    b.ToTable("scopes", (string)null);
                });

            modelBuilder.Entity("grant_scopes", b =>
                {
                    b.Property<string>("grantId")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("scopeId")
                        .HasColumnType("int");

                    b.HasKey("grantId", "scopeId");

                    b.HasIndex("scopeId");

                    b.ToTable("grant_scopes");
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.Client", b =>
                {
                    b.HasOne("Reapit.Platform.Products.Domain.Entities.App", "App")
                        .WithMany("Clients")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.Grant", b =>
                {
                    b.HasOne("Reapit.Platform.Products.Domain.Entities.Client", "Client")
                        .WithMany("Grants")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reapit.Platform.Products.Domain.Entities.ResourceServer", "ResourceServer")
                        .WithMany("Grants")
                        .HasForeignKey("ResourceServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("ResourceServer");
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.Scope", b =>
                {
                    b.HasOne("Reapit.Platform.Products.Domain.Entities.ResourceServer", null)
                        .WithMany("Scopes")
                        .HasForeignKey("ResourceServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("grant_scopes", b =>
                {
                    b.HasOne("Reapit.Platform.Products.Domain.Entities.Grant", null)
                        .WithMany()
                        .HasForeignKey("grantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reapit.Platform.Products.Domain.Entities.Scope", null)
                        .WithMany()
                        .HasForeignKey("scopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.App", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.Client", b =>
                {
                    b.Navigation("Grants");
                });

            modelBuilder.Entity("Reapit.Platform.Products.Domain.Entities.ResourceServer", b =>
                {
                    b.Navigation("Grants");

                    b.Navigation("Scopes");
                });
#pragma warning restore 612, 618
        }
    }
}
